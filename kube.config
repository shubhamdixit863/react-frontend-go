apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJWkpFWTZMdGgwMjB3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFd01UY3hOVE01TVROYUZ3MHpNekV3TVRReE5UUTBNVE5hTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNxQTlBNnA4R1ZPSGpGem5JakpYZ1R6WHNSVHlaNUFrMVVKVGR6RTNveE9GNEttS1NBMjgrYThGQk4KM010Qmp4eTdJbmJhUVRXeGZmWGJEWDlrbFpZUjdaZHk4L25OdlpQUUwwT0cvZkFoMmVWMUphd1hCaFhja01FUgpSdzFOTnhxeGl4bVZ0ZUpPSTY5SU9Od2pVNjY3eTFMSjRYR2g1VzlVU0N2bXZrU1lkTmM0R2FXYUpJblZla01sClZTR0ZzaDFmUXRxVzVXL3NZQytVVUQrZk9lY1BTc3Z6VnE4Sm9Wem1VZlVHQjJEbnNrTXM4RnVscGdCeUlQMzQKYmNvbEVEN1BMa0lkSHBXQXFaM0VHeG90R29Uem1hU05IdGhPZlNvTi92YXVETExmNXpTRHkzL0JWa3ZJUVh5ZgpDWFpia2ptNE5ocWwyM2NlVXo2K21kVFIyNGJyQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRME1OZVBrU2NtRHl1bUtVRDhLSElIZkNjQUxqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQW9nQ2l5M0VibwpYMm5USFhaMWpWWEhRdGlLQ0tONjdoMmdrd2RIT2ppalBqTk9hc0MrODVDUnpieHN5cmNFaGdnUDR4a1hUZFRBCkZ6UzdhVlZNbit4L0Y5YVpJMWlsbmdYdUR4Ni9Pc0ZhTGZPYlNaWUt4R1hJTEcrUW10RHJ5N1UrdUdvTlN4ck4KZnRVZElNQVNjckpRR3B2N2ExRnAvRVAxbEJJa1NHWDQzTENocTh3SE9MSWNrSXBkc01YZXkzQVYzcVlJb21jSgpRUXBtR1lCa2NwZVg4bnRCUUtwN0dIRHRJaWtjYUtzbzlSSTJXVnlHVGlKTjdlbVpBL2tZWW43Z0lYSnlIZFlMCjdQam1ac2VxemdOeVFZYUNKdFJnUm1FOWhzZjZmbEJMaDdJdkNKT3BNYkdLQkhwVlMwOW0ybnZYbnkxeDd4eVgKNU95V1pvNmJlVG81Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://93C19EB16AE2ECDBC082977DCBB6387B.gr7.us-east-1.eks.amazonaws.com
  name: arn:aws:eks:us-east-1:194039150345:cluster/goapibackend
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJSWxLMEhWTFVucEV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFd01qZ3dOek16TWpWYUZ3MHpNekV3TWpVd056TTRNalZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURheTFoNENzb2pDb0pVL0pldUFFeG9FeERFRHRZS1ZncjlHYnorQ080VjgxdmQ0YkNuRUJtSmJLbWUKQlYxYktsTjlVa1dFTmp4VXB2TldRRW5rVTBNMW83NTJvVzY1ajM1amwzZEM4eW5JakplUmtCNzJ2b0xab2M2OApGTXZjWkZ6UmZGb0JWL01Sb0Fvck1XTi90VDF4Z0h4Q1BkS21qWFNhY2o0TXk3eUNLeEhiZFFhaS9vOUhDc1BDCklxa21xNythS0g4Nnl4VDRTL0M0amNuL0hCZlZxVldVV0NsNFNmR2wxb0psNWovTU1adUM2b2pMWmhBZzFsbUMKanJYVVd0MW5mV20xeGRwUmk1SkJWYVJETnB5Q082a0FncW05NTl3OFJyOVBZeUM5Z2crODAwVzM5SkR6RytldgorRnJMSlczWDBWUGExREFMYW1Gcmxac2c5Ukl4QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSdjVPSE9iS3kxVGJNemVFUzNXdWpHbEhBVnVEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTRmTjNzTjhQWApnbW1TRzNoZEZxb0J5ZEF1eTcrV0daOXU1OHRudHFWeTVPSUNyc1IrK3lLbzM2c3Jqb3FiU2VUcjc3cG1kUkw1CkpHRTlTNlNadGxxR3VJOFpOaTJRUFpiNW8rbGdPNElFMlhBNi9CVXVsMEYydG45bmdDY2YzMHhrK1dnWmJKZGsKL09qMXpqS1FJSGprZ3dIV0J1Rk5mTHQ0SDZyL0xpQjlSMzdPUHUwTHBHdTdtUXorMTJQSm0zRVA0ZjZlQVBmLwpnQXF2M2J1WkowTXJSd2JWWXhMVksrUmxXL1JFWmJ5ZkUxeFNMLzFmbXZNRVpmUmp2T1dramdmV3Q4a1Flc3VVClpWV3NhTkJkcWp4RS9FOXRJdElMcTlWWjVZUU9nTzdIQ1dWOHM3MWFac0JISDJvQlFZR2pmZzNUOG52NDl2VmoKcHhtTEdoS2ZzNEJRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://28C42FEEAD04F0D5B15A18239D35B502.gr7.us-east-1.eks.amazonaws.com
  name: arn:aws:eks:us-east-1:194039150345:cluster/gos3file
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJZjh3Qkxzcm1GbzR3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFeE1EZ3hNekEyTlRGYUZ3MHpNekV4TURVeE16RXhOVEZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURQVERXaFpPMGdqZmIxVFgwQTRRWEl6U0VRNURSc3gxZFdCZkxhMGljZ1BZTXVxZ0d0dktkUGdhelAKSXRXT25RWmx4cVg4ZGJYamtMckN4dnBUMml2RVhPaE5VRC9qa2FQYVMrMnJFVnB4M1Y4S1R0TXVNUEtMVzBiegpsR1BuSU52cWJuRkxRM00yUjF6bHNQZ0l3ZUZPQ3grbURMNUxHaktXV3dRTW9rNm03OUx3d0VuZ3dzd1lrc044Ckx4bm9Sd1RjMlhUQ0ZXRG41blkrYVFTaGJLQTNSdU1ya3FsUEh4cmwzYXozblFaN0pmZG90TnBJTVpFRjUwdnUKV1Y3VTJqRTl0aHVCTGIrS0VaOExWbWlJaFk0WFVmQjJBSCs4OUVmQ3dYMDExUjdiMmVJeEJjV2czTWFRbDJUYwpZTkJtY2F2dUQyMzlISHpXbmVPYUJ1bjIrRUtwQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTU3lFSnM4UVl4dkJ4UDFyK28yQ1A1MkNVeG56QVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQk04OEREUlkycwoyUnZQeEkxQnppbVRlZzIvU25ZSTBuck5YbTQ2c2hSOXRMRXNTNjdwYW1maW91ME1tZnJaK3RGeUdGYzYvY2k3ClpacXZ2czhyS3VldzhaL0Z3MFdQOEoyaHNQREhBTkQrL0RnZmRGd3ROK0p4UHUwVlNTVXNwdzNJV1VWc1JNaEsKTm55SGJVNEFEOU5TQ3IvUFlJMnBvMFNEcFBST3gwazg2YW5HSUJDS0VJWm02K255OUVLMkQvalI2cm9pNkZ5WApPMEtqTU9zTVZyUUFCUDFUb3NuV3JzV2tKZFRhTmtQbE40dlpsb2NIcWdjS1FGY3BKb2NZZUhWUUg3WjE0ZTdRCjNzTG5wa3UxUUpuRWtpdnBSMGZvS3lENXdkeGFDRDFCZmZIV1JVSXBJWTdaNnVJOVQ5SDByMzVkSHlobEJ0RWIKTnBKVmFyaGR6eU13Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://71C4701D779BB5366958A5BF32F018ED.gr7.us-east-2.eks.amazonaws.com
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-35be54b
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJYitCczFpSDg5WlV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFeU1UTXdOek01TUROYUZ3MHpNekV5TVRBd056UTBNRE5hTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURSRm5BUTI1SXVrYkNpbHc1aXdBZFV6Sm1HT1VTRjNtWUhnYlR1cW4xREtncGc4d1gxS1VOcUdYNEgKR2xUd05ZSkpFUU1iREwwWm5rbkZpQXhwdW9CNjZ4bkxzSG81Ry80ckxrbTA1RklDejNQTjdSdWx4WUwxR2lWSQorS3BlZHEzaGVYSUNSTFQrZ1UyNXZlRk1taWNHK2hHUVhJc0s4VDNtUlAxcjQ3RHA0b2U3WSs0NG5xbWhPZG9qCnRjZTJFRWIxTGh3Yzg1NXV6QjgxSFFlZXhkbUI1QS93ZlAzNFJHbjZvV09VbllGT0lXSVdqNWtiQWF0anljSkkKTk9uUXUvTnprQ0dYbmFhQ1VlSUtKMnB2SS9sMjRaSEU3Ukt3Njk2dldrdmNNcndVL05rTXJSVlRZeC9Cc3JSbQpCMkhiZmdVZEc4aWdSRmkrZFhXNEprNW40eXhSQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTYlVFQUgrdVJSQ3pxQUEvL0lwRm5kTFJLczZEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmI2cXF6endPRAptNm55anY2K1kvTlZtSGVOYS83VGNWSDhkaTR2aHYrTHZiV241aGErYnhwaVhndU1Ib2FaWHBTRE1vRk5iMWF1Ckx3NVA4RjFRQjg4NVlPNzVwVWZwUUlvRHQzbS85cEtQWXhYc08zQ0pQMy9EcnlTVGUyTlhtSXNLWGNYZ01rQVUKV2pSNFgyUWZjRVFFZkJXQmF3cURic1RCdUM3NjV0MUN6QkVTZzFwK3QyQVoyRU9Qb2Rpck52emdJOWs4MDJpUgpBRGE0b0lnNytIUDJKVitKVVRCcTdKRHJuYjYycUJua0YzMnZCUmkyNW1wNGFtaGliQlY3UDFqNTdkaFBkQ3lQClpJV1N6YVZ2eHh6b1hLNXk4NW9mS3p0ZE4yWE1YVytzUWhBM2czdElCRGhxbXFMQVV3b3hFdzBidTJpWExxMTMKWitZWUMvRHlPNENxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://692B221604406539CCAFE50FB798C28B.gr7.us-east-2.eks.amazonaws.com
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-3f8c099
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJWWllaTgrcEhWVmd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFeU1qVXhORE16TXpOYUZ3MHpNekV5TWpJeE5ETTRNek5hTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUMvdmxXSkNVblBlaEtScy90Y3dkNXB3RGRVc0tzTzR1UzRNTjJQMmtISm9menZvUHM1U1oyRmRTakEKSHJDZHVsVUpmWUhtbTZHWnRhaG9WeGF4UlMyU1hpbW0yL0c1TE9Bbm5rOThtbW8ydTQrTE9ERm05WnF1V1cyUAp4U0k5eERTZmxvWjFDalFMcHVUa3Y0alJ1U2RZU2FGRUZZUzRwYzRUQ1FFenJDZ3lSUTRGUll2eHNXbnhYdmtaCndHZTF2aVlKNFZTOU5iUU9EV3dmd3lXbEFHM045T3BwSTExWm4xcm5OcVdFdExMejR1NThGaDhOV2lWMVBKbnUKanNSRGNJdkJxbEpIbTZIYXpGdmN3SnZYUEQ3Y3o2N2t2R1pHL3V1QUhNZERWbkdWbTZCdHMxcTIvaklFNGJPdAppMElCUjV0cEFXa2x6NDdjSER1NlU5bHZCZEc5QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSclYyN2Fja1RCVC9wd2VQakxQNHFnNGkzakVUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjNWb1ZCT2tnYwpBRXhsS2NoTkFzZUE2ZzIrQUpxbE5CL3FiRS80Y0E4cDllZFZaUmxQZnZpRlpJbUc2Zm5sZU1TdU51cStHbzk2CjkrQVNxT0Y3VWNMMGZCbnJLUDdpZ0ViQ2xJeGNyTWJqZHhodC9kbkJVMU84dERLTUU0ai9icW9yckRQbkwvU3IKVjZwa1g5VlBaaXV3cDdhZjEzUUdjbWVDUmtMSkdXQUhTUHdWTUJRVTJaQS96bjZ5N0hYQ3lTVk0wbk53QnZNKwpFajRLcmtDL3BBWlNLeFZJblhuUTZLUDQ3ZnRicXZHdkR3VGZNMUtpdGJPeFo2eDJxV1lnQmJsVFpiT0Vwcll6ClJzempMWGZzalBhdzlIWEpNNnNYbWFuMmpHOXN2UmRFcEVOSjJtSkdtS2pwLytST0lKZGpnbWFDWkxOVDM1NW0KTmZvNm1ybTBtNVF1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://84AF04EAAE7A28028FC538538DCEF0D7.gr7.us-east-2.eks.amazonaws.com
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-4947ea6
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJSjZETTNnMStSRjh3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFeE1ERXhPRE01TkRGYUZ3MHpNekV3TWpreE9EUTBOREZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURRY1NCZi82VFZyZGZ5N2F4L0N0R1ZwdDRaM1R6WktGV1c5Q05nL2pZeHlPOFE4T2tDU1JZSm1wSGYKSjdTdWhzTWpzRWlMcTdIMjkzTXhQMEZYTlpVUG1GR0o3V3UvZHB4aGwxUCtEYVR3WHRIR1BTeUtvb09jV3FGTQpqVFd4TjFkWjhoSTBoSTBXamxueXhLNWYyMklORXFNTGZhVEtHNEMvYjZlYlRxRkFiRy84dlFkY3ZFa0NSM3dLCkErK2QxYnhmT2dJSVkyVytudGZ0b2s5TzlMQXRjc2tKaERRSDV5NGtwVjRaalloRmwzbGhheTcvMTEwVysvbnUKeWU3NjFUd2Q1VkFxTmtjanR3MmJUWUt1amtGVHFFQm9RMFZ3bVNubmhJYnJQeXNpUURqdGdidzhTdUdqaEpFRwpTR05pdmpDWW1FMW1hM0c2QW1Nb2xjSERUMnVEQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRem9ZRGhGbnZVWTZsbHYyRGRTWXVzZkExdGp6QVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUdPN2Y3NWxwbwpoZUdkZnE4MkRDZm1KaytXR003dmFmc1JrTnJXVGprUWZUN0pYL0V4TFJGWGN4THZlOUpvVGNxZXNNZzlieTNPCndGV0xTdWpJQ0FQVnBrbERwcjAzVnhaWXJoUmFxSXphS0tRNks1UmRpL3dNK2wzbHJESmhmVCtnc2o4MHQ5N0MKRnhZWHJGeEJCV0djL3dHQ3VzWlV6Q3hHSFdMV0lIYkc3S0FhNHNOQlU3bGlsMWxybjgrd293Q09pc0g3SzFtYwpmdzR3djhsTnhnODZxM2EwYmg0cTQvUzdIV01HT0lRemRFczk1Sjl3VStzWkVBVENRNVAyYk0xK2JkdnQvUmdjCjd1dmN2NHR6eGFlQzJFTUtZQlZZRkp1eUUya256aHRTL3JXZVZJdk8yMnJCRGhoUjh4bjB1OERSTmlKaUhYU20KbFJES09ibVF4cTFUCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://F31F7AB21FC4B44992532839626E7C4A.gr7.us-east-2.eks.amazonaws.com
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-5c604d9
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRDdQN1pQMkIvY3N3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFeE1qY3hOREkwTVRKYUZ3MHpNekV4TWpReE5ESTVNVEphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURZNFlpZTZXZmRFL2VsWW1KRURQQnhBRzRzVyt4dUd5aGtuTHVRVUtRdHo2ek5odkNRbXFpUnNmbkkKNmZhcHhFZDhjMkRJc3c1MDBrM1RQRnUwMVhjUnlpb3JVUlhveE1lRnlFY2orMmpwTGV5R2c1S0wyV2krdE5HNQpxVTNNSENLTjV1Ri93VXp2VkdudVFCSndEQWJCOGN5K2FmeEk3b3hUNXdHL1B5SlhGWTVyN1ZGRmJTMStOQWlmCkFjRmpVSTBzaE1hamtYRlU4QlFlTmZENjJOVU84bWdxUldKWEI3U3lWLzNGNHBlZGl3WTNhZUhYdEZFVi9WNkMKcGpiRGMvM1dadVplWDJPdDJhaklNUGk3RFkwWjFxcDVCQ1RVN0xFc3RTTXFsSEt1SndRUFU3VVlDREZrWkoyNApjY05QeDFpRy9Tc1pLSmtyMVVJRC85eW1ueDlsQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSL2hzNFNhZ0VuaERlSXhldHRtaHluVlVwSTdEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUZnQzBOU3RSYwpzWGowZFNhZWQ4RUV2UnJwV0cxaTMySzZYU2RlUkg2SDlsNml6UHJ0TEFqYUluZ0EvdzEva2ErVGRVR1lSSEY3CjlFNjQ1dmhqZlFFaVdVaG5NSkgrbE5FZnhmem1pZmFoZFVHcEtNWmVqVUNoRWJYMXljN1hRbmhTNTRYQ29hT0IKUmJVbndENW5qS3ZYWGdOVm8yYWp2MlJHcU5aazFTRlB3WEwzMHVPWUVhckt0cTRGMGI5dXJiU1J4VkowMmo0Mwo1dDl6NGliMWJXZmNFOFBtZmR3RS9RR1RlcW45bkZ0Qmp0MWU5K2kvOXJZMHVUekVkc25YQkRNREJ4cE1Fd1JvClZRbDBkNzZoT1AvT3crUGpST2ZHcUFSRFU5Q3ZBdmNTUmR3SVpoSkU1dVlwVjI1OTdESnNNZmwrL2hNYlh4NzMKMkNUK0lzbW9ZdTM2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://57C9348706F16A06C91A7E6018171434.gr7.us-east-2.eks.amazonaws.com
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-878db17
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJUnNLME1zZE85N2N3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFeE1qRXhOVEkxTlRaYUZ3MHpNekV4TVRneE5UTXdOVFphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNaSVNoTkdCYXBRMXFPb2YxNVJLSmFMVzJvTk1ZZ2VLbFNpRTZJRG1jL1VQV2xoeWd4Skd5YjBxTjcKOE0xdVpaQi9EbXRuclBjZlVGTXVYdWdqR0hJYy96TjlyKytMMEFiK3k3TWR5RUNKSlRkSUtHZkRHcXJjTjlsMgpPaUIxajdqdmxUSkU4K2VOQ2Q0VHQ2WU9NSjdIYSs5U25aSWs3b0RNek84ZkJseGJIMG5GUzhXc2xpY0p4bFF3CkdQbVc1K2NtWlR1NmNEdm9CeDhIeHlVMmdFZEpwWGZkMVZzOUlBSUlENWtvbFUvVjNxM3pQbEowOU1hYy9DWkQKZUJWVVBkblNvRUV1Y3J3ZndZSGNHRkhXd2xZeHRTcWgzdjNmeEREaGIwejJ4M0dZTmNXOWRKVEJUNGtqNGRHYwp2UVBwVzlWUTVNZWlWaWlRaHQ5dDM3aEZPdW5kQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUWVRsdHcvdW9ueWU0SUt2ODU3NzR6S3FZYWdEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTc1cEdLNlo5OAo2Q2xFVmdKZEovNFpXTHRQMGxIR1Z5eXZWMVpUS3hZci9yWFBzV1F4M2tQU2V5UzZ5M1JER2NwWXk3MHBqd3p6CjZNOGg0WmNtTVFGWCtQNlZ6Y1JEOEl3QUJ4U1FjSjJWS2xOaG5rNEt2M1M5VVFwVVdHTVIxYnpTM2dUYWlmQW8KWjg4bHRMNHpoalVDbnJaU2lGWjlPeHFsaDhWTWJ1bzJyeTljSEdNTTNlM1VVKzRVRGsvd0hzRGNDOHpQb3FQSApWMWx4Rm11dnI5OHNjQVU3WkVpVVFHcFFERFZpMnNmOC9MSktzeXcrR2Erc2NXT1haYitBOHRocmpLL2xYR0w4CkZYOVprNEZXd1Z0UWtuYTBQWEVLdlNXR3pTSmw2UUpicCs4R3d3ZXVnbnM0YklOZlU2NWRSOXhEVXg0T29RZDgKaGZGaHpCTG42cE9MCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://F61161321D7C16235CDACCBD3F307A85.sk1.us-east-2.eks.amazonaws.com
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-966cf6b
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJQm5wb0RHVEFVTUl3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFeE1EZ3hOekkzTXpSYUZ3MHpNekV4TURVeE56TXlNelJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNyZTFtaXdJMkpRd05sa1E4cG1WQTRnNjYzMzVHem5NQnI3NVlzM1FGK3FPVWdFVHFoaUJ4U3ZnZWkKSmw2azZReklOVmNrZC9BZ01zcFVtQy9ta0RUdGV3Z01COEhha05jVVdidms2VDFNMHpqWkhGd0hzbDRZR3piUQpIVUl6anlRdzFqTi9qTGU0VzcxVzk5K0VGQnR3amxHV3VnWEVTZGxpV05BVTQ0YUZpK2h0dTZaM25RWC9yZ3kwCkcydkN0SElWbFRsSUFmbWtxaHAxVytibFpVMk5aWEFuNUpiUDl5elU5Y0RMeHBxZnFJc1p4RXFjeHRRZit1c2sKMkdhZ3phRk8zeThWN0N1MjBmSXVpTjBTWFhRWjZKckt5VTdRbm14NDJqdzZvMUw5Wi9TRUxnTHpRSzY3eU9IbQpWa1o0anRmU1JEVHI5OC9lSDJMVzhOcm9iWHRMQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUZTdxQUZhQ0VSK1NRbXNMSEpSSkUydkNtbHdUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUVETEd2Tytrago0VzY1ZmRxQ0h5UVFKVHJ3aU5TMys2R3BBaUVYY3ZETzFBU0JUSFQ1M203OHhhUFo4akxaOFgvcGV2VkYzc1I1ClJ0bUd4ZlAwM2pnSU8wdVUvU0p4UzdiN3AvK25kWlB6cjJybW96OWg2Z0NidDllaE0wdmVRQnJkeFl0S211Z0wKUFd2bSsxWGFINmxsRGpQM2VLajhRYXNaZnRENXpneDJ6YWxnc0pLYzFRa0I3cVhWWXRJRFp4d2ZQVjVPY05YMApZOEs3VzBwcWloOWlLaFZzTUVoYlIvRzFYVldTNGZPSXNLRFRiVHZUUFhVdStueVQzVWFaTnpzOXhncncwam1LCjU0UW92dEYwMW1oREtaMHVnUyt0TDlqcXErOThBOWhvSkpEejFpNUQxbGUvQW1FejFxakQ4TlNiT2lucWY5WXcKNm1GajJjTEE0dDhVCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://CAB0147EAB0D04494B0EF2A39F0322E3.gr7.us-east-2.eks.amazonaws.com
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-a12747c
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJZTNjQ2cxK1hHYVV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFeE1UY3hORE00TURoYUZ3MHpNekV4TVRReE5EUXpNRGhhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUMvT1I4TG5xWTAvZ3V0bHBJajJMQVZicWh6RmxleDdMR3B5N3lLN1RqYWRnbStPMFhDb2NyUWZzZ1IKVG1peXp0bmh2RTUzK1Y0MWFPd2dKSUYzKzhMV1FMTlYxdGtTdmNxWDhHUmxhZW5FSEl4WkkvMEh4bUdQejNUcgpDSkp5YTZZZkdHQTVtY25UYWNzalFhdHJyblpiUEFZUlEyOUpNKzRSSDBFWE5DbnJBMFJNWHJLL28vVlE1VmFHCnlCdzNxdTFZc2VMNlNjWEdVandxams2M2NRbzNJdkJYTVM4aUhBdFFMa1BCT0ZjSHJvZHd3ZDhxeVhtNS9hZFEKWVFGcUd0RVBQRnB2WVFmTEdUaWJHYnZYNWRXUDZMaW95ajczMWwwUUYveVVVUkF2djVZalMwQ3dFcGU2R25sRApPcTM3Ky8rNlAwMTB1b0pMZGRWUE9TTFp1Q2JQQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTdEpDVm9RL1hxWHFJeUJKMDJWVXBNcFR5WGh6QVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3ZUQzV1ekRUeQovYzZjamNKTHM1TDVkSHdHLzdETDR5UFJxcDMxWjRSWGU4NHVjU0lhSEZqbVIxSjhaeWczRU1VMXZlYWwvby9TCk9wd25rdENiOW9nYVlINWxOd2NQdzA4TTkxK3k3UDB1MWdLMTUrcnFyaTB0TXg4bWJFM1RaRDRSYmpJODR0UGUKNlhPaS83TjlaRHRiSUZIL01kNXVPeWVWcVEzNHNxZkxwWVl1M2RMemM2OHFnYXZGWFVGY1hPSXpSc2hMQTY5TApTN0xSV3NSdUpmNHFtOTVnNkM1TDVBb3hadEpuUlQ3RVNlakMxZ1JZR1UyTFRZcFFVZWRvbUhReDhidXp5QUQ0CjFmSzNLeDZPVHhoUHFWMkUvZTl3TFZsUDdkZDcvOTBGb1o4ZnloQllRQkRzZGZTRW43a2RxeTlzZEhwV0dZZjkKSEQ4eCtDZlRBSjFXCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://ADAA4254EBC61644C15A56E6556C2DA4.gr7.us-east-2.eks.amazonaws.com
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-b1975c0
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJTkhPNzZSckZZUDB3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFeE1ERXhPVEkyTWpGYUZ3MHpNekV3TWpreE9UTXhNakZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURhcVhtWEcxWGpLTFpKRVFHekRHSFVOc01TRlJnZ3NpcW03VGpSbEZRdFg0NTNUWDQ3bytMWWgzd0cKRDRsNmdUbjZJVml2TE5ielRiZHpqdUQ1SzQ1TlhScmE2MnE4b0xQbC9UclM0K2o2K1FlNHMydEMwb2VWSzZGeQpsbkhrb3k1MDhWZFB3d1NmN0V4RlA2clJaQUROVGdGU2Rodm5qeXdtV0krbVlwT0VDc3UxbkRmcFo1UWtEcXdRCkhEU0tpUkw3MFhGdExIS1owLzc5L3lxcDBTUWtxR0dXVFRsZXFjKzgwNTlCMnhZb0M0ZVFJbFlHbVBIaUpzUlcKVjdSWHJkOUdGeGlnUWdESjI4U3hiLzVYbENSVmlwczFEa28vV0JzZnZKZXZIVFZtSmtYTlc0aFB5aEJ6R1cwTQpwSlR6WHlpUUdoVUdjUSsvQ25YRXNnRkk4OThCQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSUkplS3IzbEl6YnlLTjgzczd0VXpmRVIwSnh6QVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1kwRzhjUDE3cApzQkgrd1F1bXNlTzNSTGhZUU5VbVZYczkzRXFwaVM5SXZIR1RmS2oybGpMbHZyQ09VVUpPTkc3d0JNeHBKTllZClNuSkRxN09scUF1U3NWUHJRK0VEMEJzdGh3MWttOGVUZTR2MVBnZ2pNZkdvQXhGQittSHNlcVhzVDFkbjNUN2YKc3l2NEVXUEJGWmdvU0dYOXE3SHU3TFJ1NWRUK0lTUDNqdDd0OVZSM0FjTTZXZmlIQytBeWRDd2doSlF6UDd2LwpwTTlqcnh6di96TWs1dzh1cmplcktTYm85aFRUMXVVV3oxYndQU2RHVEg2bmNvSG4yYWl6T0N5MC9abEpENFM5Cmc2M0RLY05FN1VGc0xqckNMNUJaYkFtNzdrTzAzYUQ1T29pR3MxNXY2OEdtMjE5YUp2U2tWN3JxamxVcm5PblQKY0M0dUZKNklwby9xCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://84AF2E359748194D479C516CD024F0E6.sk1.us-east-2.eks.amazonaws.com
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-c3a1c05
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJTnVGRi9wTnR5b0l3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFeU1qUXhNelEzTVRSYUZ3MHpNekV5TWpFeE16VXlNVFJhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURZODFoZnlJS2E2VHNFM2RJcHIwSkNNS2U5WGpmWEZOdUVGczZUTzdaN1ExU25FeE92eExEaG9TWk4KTHZnQ0JYaEd2ZjJ5eUdoVHowa1VRblRWZnI3cTlYL0VoRlBpZkkxU1ZhZDVoZER1WnVHMFk0di9UR2lrb1A2eQpNMDVGdFF4TTQ3TkVRMmJ4U0hYQ3hQT25XWkltTGdWTXppUVQ1VVlJMFRwZCtnTnhVRGRxTzVBUWNkS1pFQWc4Cnhldm5zVFBVSWN4d2g5UFBGTGdhYUFXdkNGUGROcFhmQkNsVGxwRm9OSnF5Q0llQy9lcXdXOXBWZGFqeWJVS24KS2pCNk9pMUxGMCsxSHhIUDY2cnk2M2NTdmZvQVZjSm5wUXRmM0hyM3Y3bUcvODBSU1FweWFOZnJ4WkV5UmJvaQpYa0t4cDhaVU92THpXWXFnZGZGZW83Q0g1T01wQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTMVI1OXk4N0FCSjdRc3A5NEVEdE8vTG0rekdqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUVSUHNWcXlrdQoyR2dZeUVlaFdBUVNNVUhjVXBoSVRzMUdjVGI2Rk5IOHZDMXFoNkp0TENVc1VjOURmVmtZSVJhL2VGVElUMEcyCjRWMzRJTXpYcnVVSEltVFZWSkkyZWNHaW4xVEtldW1yYWlRWFZCblF2a3FQNnlOVjFwOUtBa01JZmlHVlRLdDgKc3ZYTVh3dytBdG1IaFh1UGxwVkt3RmRyYmYyYmdOc3ZpTFYyTm9ETm5Wa0Y3alJHaGJSL2pmUStnMFg4MmZWSwprNkorcXplZUFMb045V011TlBNRmduUUhybGlCQmNFRGR2N3hXSEEyNm1wd3hLOE9VZGtUZkhoR0lZaTBUbEV4CklNbER0aDZEb2sxdG02OUUwMFVHdmxnYjk2OTdtZVZTenJmcGdYWGNqQ0xsd1g2ME5jVzR5MlBjSHpIb21VQXgKMjRxbGF1QnZtL3BICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://67A144B025E9F23F12DD940F34FC5FEE.gr7.us-east-2.eks.amazonaws.com
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-d8da1b5
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJTUxOdWw3NUtZbXN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFeE1qY3hOVEV3TURsYUZ3MHpNekV4TWpReE5URTFNRGxhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNucFMrN01xREJHMUNVOFErTE9jNFRpVVg1YU9LRGNzc2hUSUhQTDBXN2NxcnptL2VPcVhGdzJqc0gKc043TG1mV3NjM3d1Sk1NRkhtTk1aNmJKcUhQczdiN2Q2Y1VDcGJ0emNrMGJCUFZFdlQ2UnhyOUtiSllvRkRBbQpFOC9WcVNDS3RVSVZhRDJJTjdLVTV1L1cxVW5vN1Bha1EwU1Fhdng3OVNrQTZWMFU0aHdNenF0cFErZktxWG45CnNQS3cyY3JlU2s2eWxuTDRzWDV5aUJRMHYrS1NwUCsvU01hS1Y4Vk5oK245MzF5Vzk0WGpPNHBMUFpORVRGVmMKVHlGd0lVczdNeThXU0l4Sjc2RzYxTXNhdUNJY01NelNUTFN6SEdFRnBrcWFOUGIxS2hGNXo2QmtIS3ZpT08rLwpETWkyUlg2TjRCWGpkb3E5d21CQ0tkdjd0RmkxQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUVzFpaEdDSFJtNy9tSVE4RGhVYWtCd0FvRUdUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjhaTUI0VE5zSwpZQ1J2SnV2VEtFK21BYzh1SHRiSFRtT1FsNXFqWThwN1F4VmJ6emhXc2UycmhrNjNmUXpwYzhWTjdYQ1ZoMThXCnYzVjlEWjh1eWtYZ2Z4MkdscGF6a1o4WDBoM2Vub3VIekpybXRhVWtneko0MHVuREZyK2RiMm1sSkN2bWwwZDUKWnhQN3V2YUptaW8zQW4rVGtKSHdQRng4dHQxRWlKNmN0TGdRVUdHaFpCNWtIMnVweGk5bWFNdTlqMUxTQU1hdgpxTldxb1ZFTHcrOC9KMUJYN3B5aTk4b1Z6d0xUb3M4dHFlVXMya2FIZkdCbVJ5blg3Nks1VHFPWml4TmlYQWdaCjhXQzNSS0RSc0ZJVXd5Y3piNUhNeXJtUE45VTNMc1VLdm1pU0hBL2xZSEZoOVRKbGhvYmc1anJHdldHN0pQYk8KcmY3a3JhV0kyN0FvCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://C73C5BA31E117AD2086DAC5E4E32DBED.yl4.us-east-2.eks.amazonaws.com
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-db268ea
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHlNekV5TWpVeApPREExTURkYUZ3MDBNekV5TWpVeE9EQTFNRGRhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDczFXazNTYXVBc2s5TVFWRFVvVzRYcmYzc3JPQ1FQUHY2cUZVb0pqVlJCZmY4L3pSTwpOcEtPMERQTmJlYTVWOSsweDdyc256T2gycFA3VFlaOVFIU2xXc3J0OUlMNzJuelJTR3N2aXVSRHYwdk10L3U4Cm1JeTRTL0s0enZtQW4vUFFPUTZvcnBEaDBtbHRuRjBpaWU4R1lpYTI2RTR1SjlpcXQ2ZWhKaWRzSGR2R3JWUGUKUUZaMDh3UnJ1QjBnWHAwL0FZMnhqNU5ucG1JZ1p4Nng4ZjlCblBrZGVURERKZHZaUy9GSGkvWVFVT05ra2htRApuR2Y1a0IyKzlOWmdPbDBIdnNpckgyanpVWEVReTdDM2N2bCtndzBTVFZpSnFGMjliUlFvR0dDelQwUUZRbXRUCndsdFRGRFJxa0tSam56UFpOVEtQOXRLd3k1Wm5neWNrYmorN0FnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlEzVlBLNHVnb1BlS2kvdTVEcQprTE9NVXZVRmN6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFOVnVLTnRKRGdLejYxbjJjcFl5N2ZMSkU3Rkt6ClVjMlJnbzFiN1Rzbzk3dDExdkFzWFkxMVBiejk0RVJLWUt6RTlpN3dpNmMwNVhEdjIzdnNJOFhPVmFSOWNvS2oKRXRzcEtmK2d2NWc5Zi83b3g0WXRMUVU0R3ZIUG9HeXJqdlBWSm0xcU5IVGYyc0t6UVpKS2ZxRG91WnVMd3FGQwpiWUgzek4vZ0V2cll5UDFCT25Ka3pha01ab3lVRGJWdkE0U2d0MnNYTGZrUVNScW1rOU5mTEtCbkI0Q3AwU09TCjc2RFh2RzYwZHg0R1NDR1l0MFFaaURSRHVxNE9jbHRvNitkL1dzLzdUQldlMzhkMWY0SXNpVFRTd00wbmRxR2cKZXMxVm8rUEs0Y0xkSTFKZG0yemFydldFTnpLZzdJc0hNRTRaWWordXFiN1ZMc2VncHhFNXd1eXNXQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://0f03ab9f-1b38-437c-86b9-e1b956b8d2a3.k8s.ondigitalocean.com
  name: do-sfo3-k8s-1-28-2-do-0-sfo3-1703527457325
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1USXhPREEzTWpFMU9Gb1hEVE16TVRJeE5UQTNNakUxT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVhUCnpIRC9JSy9mdy82K25qRElCSUU0bGNnOWVGZmVyNG5xMUhDaDBRby9aVURTY2h3YytGWExod0tOdmhlWXhnNHIKNzlVd0lPVFhrYnVLNVdLTHhGSW01TlZ3OEcvNTUyWDRCL1JDVkxmY2UzRWlQV0lWL21TMXRUb3JjaXlYUVJ1dgpobDY1dkMwWW05ajFtOTNIek5vUGhwdTVLZUhsSUxsSkhZbWY2VEtmUTdZY0xGZWtBMjk1QmRBQk05R1NZajdsCmFVemt4ZkR4ekgySkpnOWVYallHaDZrcFlHV0dWN1RaRXpXeDZFS01tK095bEg5Q3BsbEo3T0dhdXhCazBNaXIKdTFWWlNUbVBwK2hpU1dRaFc2cVRZUFRneWcwdVAwOWxaRWpneUw3SzVuSU8ybnFCa0RBaTJhSnVsYkZFeldmMAo2UllrNG1FZC9rMUZ6N3NmRU5VQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZIMzlleXA1ZmdiUzNqR0ZqcDFpMGhGRzJyTnJNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRUlqd2JPZlN6QTBxUDJNd2FwKwprSkRxSE5neHh1U1UxTkRNZVR0NnVXN1pEQ3JiRXFFblNGbEIvNVBUUEtPSjkxNVR5TnRGTGROVm44T2o0OGJTCnVtUHV6RXJRRmtOamViRnFaOVoxYUFLTGNIREFoMVIxYi9HL2pIdVVURXdCeTRvWkl3OEw5MWl6elpWdERoVVUKS1N0MlNVb2E0b1JaM08zeklXOGZ0S2dOSGtNaUpZTUppbnNITEJHSG85c05UUVZOeVV5UmNtUHhFTlhxdnJkMwp3b2IvbVRmZXNZUTlJSEI3Y0lzbE14b3dGTjJhOE8vRUN6MlFZcm1xaUJhTW5vK2hHL1lOejVscVNJVjFhS01CCjZVNVkzTHRTZnBrM0drRklLRGdacW4wUlRSMjJoUHJxR21UeUVpWFV2M3RPaEFGcVlZZ0ZGTkdjMFhTZ2YxRFoKUHB3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://127.0.0.1:63595
  name: kind-kind
- cluster:
    certificate-authority: /Users/shubhamdixit/.minikube/ca.crt
    extensions:
    - extension:
        last-update: Sun, 26 Nov 2023 21:30:26 IST
        provider: minikube.sigs.k8s.io
        version: v1.29.0
      name: cluster_info
    server: https://127.0.0.1:56871
  name: minikube
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJYzZ3L1BpQURyd1F3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBeE1ESXhOREE0TlRWYUZ3MHpNekV5TXpBeE5ERXpOVFZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUN2Y09mRnZ6b0xCZS9CakdTajIvRE8yS0tPRmhPcXZSdXZMeTd2czIyaWI2NWxHTzV4VWRNcDM0YlQKZGZTd2RjYms3M09ydFJVZXY0Y0ZBQjVzd2RKdTkxaVpLNU96Vmw1TWgwR0g5YnM5Vm1pbTZrLy8xYTk1dWMrcwprTzJlRWRHWkgzcTZyRlh2Y0IvYnNFM082Zk5aeFZyOEZSeTJXNEFZOHRJZHVnd3FpKzkvVytuVnQ5T1hyd3l2CjZrbUMzYlBteFp5d05MbVVSbGtqeFpiRzMrQVRwUkhZaEQ3YXR6V3JMUEZRZ3ZUemFpc1JaYkZzWWdwMVdqRi8KVndqNjNrbkhDc0ErM3FLY1JYUXVmM3BCRG9zcHB2b1JUVEIvc3hrd1BhSzNMWHhjdCsySGJEdjJmaTdaV3dNZQp5QlZYMzY1MlBZbVNjV2xQTGFDYnRad2ZGMVo5QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTM01KQTRDNytmSnpZd1hTaCtsdTRJM09xeUR6QVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlVENDFhYWlMNwpvc1JJdktFbWVCZ05XTVdIZ3pja3VzNjNWL2owcEhHTUljVTFMZE10OG9XTm0wNUlsamlqTXZnWVdrWU9XZkxBCjBnaEpSN0pYRk96aFJ0c1BGajF6ZzNLaVRLeUZqSUF1OXFGRkN5MVA1QkM0emNrNWVOM0VSLy9WcXZ3N2pvd20KSzJpZ2xXMVh2WjRidnNHaWEyZEdpd0FUNUdyYld0OW1MM1pmVWMrZ0s2RXFLQktGT1VUTlBrRkRMd2VoTFl2Sgo0OURNMmpzcUEzY3NoR1BSVlhRbnhOMDNFejZLaHA0U0NtaEw2VGlNV3EwNVZPOXAzeEhmTUhDc3ZPK1BCY3lJCldqZUxUa2Y2QkpCK0s0SVErOXl6ZEZVWkhpR2RmbXBxb3F5K3hRMDFHU2NMYlAzZm9ObThpc0t6TjhBWjVMSjgKbU5GSHBXVkhEUG5LCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://3F4EDF63995E8486B9BFBCA3C690CBDD.gr7.us-east-2.eks.amazonaws.com
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-cf67990
contexts:
- context:
    cluster: arn:aws:eks:us-east-1:194039150345:cluster/goapibackend
    user: arn:aws:eks:us-east-1:194039150345:cluster/goapibackend
  name: arn:aws:eks:us-east-1:194039150345:cluster/goapibackend
- context:
    cluster: arn:aws:eks:us-east-1:194039150345:cluster/gos3file
    user: arn:aws:eks:us-east-1:194039150345:cluster/gos3file
  name: arn:aws:eks:us-east-1:194039150345:cluster/gos3file
- context:
    cluster: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-35be54b
    user: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-35be54b
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-35be54b
- context:
    cluster: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-3f8c099
    user: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-3f8c099
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-3f8c099
- context:
    cluster: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-4947ea6
    user: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-4947ea6
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-4947ea6
- context:
    cluster: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-5c604d9
    user: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-5c604d9
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-5c604d9
- context:
    cluster: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-878db17
    user: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-878db17
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-878db17
- context:
    cluster: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-966cf6b
    user: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-966cf6b
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-966cf6b
- context:
    cluster: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-a12747c
    user: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-a12747c
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-a12747c
- context:
    cluster: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-b1975c0
    user: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-b1975c0
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-b1975c0
- context:
    cluster: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-c3a1c05
    user: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-c3a1c05
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-c3a1c05
- context:
    cluster: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-d8da1b5
    user: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-d8da1b5
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-d8da1b5
- context:
    cluster: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-db268ea
    user: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-db268ea
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-db268ea
- context:
    cluster: do-sfo3-k8s-1-28-2-do-0-sfo3-1703527457325
    user: do-sfo3-k8s-1-28-2-do-0-sfo3-1703527457325-admin
  name: do-sfo3-k8s-1-28-2-do-0-sfo3-1703527457325
- context:
    cluster: kind-kind
    user: kind-kind
  name: kind-kind
- context:
    cluster: minikube
    extensions:
    - extension:
        last-update: Sun, 26 Nov 2023 21:30:26 IST
        provider: minikube.sigs.k8s.io
        version: v1.29.0
      name: context_info
    namespace: default
    user: minikube
  name: minikube
- context:
    cluster: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-cf67990
    user: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-cf67990
  name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-cf67990
current-context: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-cf67990
kind: Config
preferences: {}
users:
- name: arn:aws:eks:us-east-1:194039150345:cluster/goapibackend
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-1
      - eks
      - get-token
      - --cluster-name
      - goapibackend
      command: aws
      env: null
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: arn:aws:eks:us-east-1:194039150345:cluster/gos3file
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-1
      - eks
      - get-token
      - --cluster-name
      - gos3file
      command: aws
      env: null
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-35be54b
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-2
      - eks
      - get-token
      - --cluster-name
      - cluster-eksCluster-35be54b
      command: aws
      env: null
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-3f8c099
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-2
      - eks
      - get-token
      - --cluster-name
      - cluster-eksCluster-3f8c099
      command: aws
      env: null
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-4947ea6
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-2
      - eks
      - get-token
      - --cluster-name
      - cluster-eksCluster-4947ea6
      command: aws
      env: null
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-5c604d9
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-2
      - eks
      - get-token
      - --cluster-name
      - cluster-eksCluster-5c604d9
      command: aws
      env: null
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-878db17
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-2
      - eks
      - get-token
      - --cluster-name
      - cluster-eksCluster-878db17
      command: aws
      env: null
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-966cf6b
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-2
      - eks
      - get-token
      - --cluster-name
      - cluster-eksCluster-966cf6b
      command: aws
      env: null
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-a12747c
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-2
      - eks
      - get-token
      - --cluster-name
      - cluster-eksCluster-a12747c
      command: aws
      env: null
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-b1975c0
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-2
      - eks
      - get-token
      - --cluster-name
      - cluster-eksCluster-b1975c0
      command: aws
      env: null
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-c3a1c05
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-2
      - eks
      - get-token
      - --cluster-name
      - cluster-eksCluster-c3a1c05
      command: aws
      env: null
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-d8da1b5
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-2
      - eks
      - get-token
      - --cluster-name
      - cluster-eksCluster-d8da1b5
      command: aws
      env: null
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-db268ea
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-2
      - eks
      - get-token
      - --cluster-name
      - cluster-eksCluster-db268ea
      command: aws
      env: null
      interactiveMode: IfAvailable
      provideClusterInfo: false
- name: do-sfo3-k8s-1-28-2-do-0-sfo3-1703527457325-admin
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - kubernetes
      - cluster
      - kubeconfig
      - exec-credential
      - --version=v1beta1
      - --context=default
      - 0f03ab9f-1b38-437c-86b9-e1b956b8d2a3
      command: doctl
      env: null
      provideClusterInfo: false
- name: kind-kind
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lJZldRdUlMYktwUWN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TXpFeU1UZ3dOekl4TlRoYUZ3MHlOREV5TVRjd056SXlNREJhTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXd6NDhpekJIWldPVjFUYWsKK216MVYwbWNiL1Qxc3RWZlllZEhYeGRQNHhKekRDcWxoTzI2T0lxNThYcHNlai9seEs5dFYrN1c4UGd6ZjF0SgpINFlLb2dDNVF6RnAzeXpDV2FZZ1BJWml2N0NqTUJUZjd3enluWkRCUk9vWnRWRW5xV3EydHJSVlM4UWRkNTdQCmpHeDU3b0xFaHp4aWJSWWZnTENHcG9qQmY0aWppQlZGMmxmd3RPV2NqaGZZSzFoQms0N2FLSXhxWE9pNmt2TFQKTmtmdC9wTTJ6M2tOOHh2alFSQ3RTdlMvUkh5RHFPY3RkYzE5YnZrVnFVNiszbVVnUUNiNUpvbUlkWisrbEVCOQo2M0VWZGpiMEZ6SnZSYVI1QWhJMHd3eEM2UWh0YXFSazZPeHZBV3BRTEFzZ3ZXbXIrQTV6RmhJNUNQWmFKOStkCnNSSll0UUlEQVFBQm8xWXdWREFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSOS9Yc3FlWDRHMHQ0eGhZNmRZdElSUnRxegphekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBYUwxUGlGN0s4eVkwOWhWNG1hYmNva0Q0M2NlbFBUMUlQeUEwClh1N3k3VXZzVm5NdDdNWGZBZlN6Nzd5NnBwelpRVGFsZkZvdUlUT3ZBVE9xOXo2Y3hmN3owWEwxUGgrUHJ0bmkKdXhxczcrd3B6QUR0cThMUVpjMnNKU2VHRWtsWC9wQll4eTViY0pjOEgrMmZlazJNK3hvK0s4V1NBZjBRcmJrMAo4ZERwVFNvOUE1TnVHR1BBZFZFdjdqWElUQmNpOStWdjZrb3MyenVlTWNLa25GNG90NVhnSk5Pb3A4SXM0L0VXCmZUVjhNQVp4WDdrT01vUDZPQ3FVVUcwZ0VQM2ZwWFVZQ29wR0pGTm94bUlZYXZoSjYraU02TGdGbjVsaHA1TFUKWHRNVHhURkxvdDdCUnRrQTdMZUhYdW1RdEF0K0RVZW83UlBLZnJ1d3BXendZMmNPMHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd3o0OGl6QkhaV09WMVRhayttejFWMG1jYi9UMXN0VmZZZWRIWHhkUDR4SnpEQ3FsCmhPMjZPSXE1OFhwc2VqL2x4Szl0Vis3VzhQZ3pmMXRKSDRZS29nQzVRekZwM3l6Q1dhWWdQSVppdjdDak1CVGYKN3d6eW5aREJST29adFZFbnFXcTJ0clJWUzhRZGQ1N1BqR3g1N29MRWh6eGliUllmZ0xDR3BvakJmNGlqaUJWRgoybGZ3dE9XY2poZllLMWhCazQ3YUtJeHFYT2k2a3ZMVE5rZnQvcE0yejNrTjh4dmpRUkN0U3ZTL1JIeURxT2N0CmRjMTlidmtWcVU2KzNtVWdRQ2I1Sm9tSWRaKytsRUI5NjNFVmRqYjBGekp2UmFSNUFoSTB3d3hDNlFodGFxUmsKNk94dkFXcFFMQXNndldtcitBNXpGaEk1Q1BaYUo5K2RzUkpZdFFJREFRQUJBb0lCQVFDWm92amJncE04R29CRwpObWplVXkxQWtjRlRiRXlIZkZaQllWQ05hSGZKdExQcGlBbVZyOGhSUkFFTUg0MExLZ3J4bWlZT0F2a0t5QlVtCkM3eGYzUWV5OGFUWFZpUDhwV2tPU0thbldneU0wVCtvejFSajlTbFppaFk3MTRlQllhbzNLNjA1Mm5BZ1hlUGUKUkk4SDdqaUkwa2c2THU4NDdpYStDcXI2a3pUSTJHajBCMkZya3ljd2V0Qm9YQVJBc2JXei9iOWtuaUVYaVJDOQpzWXBJVmFUV3E4d0I4aS9DQXVMZXJuOUE3ZjRsRGFVd0VyaVR5RStlUEQrdkdYS0s2SVR1bWhtN3ZVdHZvazdVCk5oMS9xRkgrWUMwenFaVUlUMjl1eWh2cmJ0d3V4bFNOaStQSTFmR0RPLzl2Mm40RkFnT1JxbmNBdHFxSmZ6QTAKRi9LV0trT0JBb0dCQVBJczlKSFdTWmlWa3Nqc1ZHNGFwWGtuTXBVNDZwMWVaSEZuTk1XdVZSa2N2Zk5GNUtTeQpBM2lRUjdOTFFDZFl1WThiZFl4RUlwVDFscTAvMkJKWDhNRnhUd1F6L1U3andveG1tRmNWUmpoa25jWG40L0JnCklBczgwdllSQzExMzc5ZkV0VGNjQnB2aUpBcnpxbllQSHFvUDYyMGtCdDlEKzZWc1M5amVZQjhoQW9HQkFNNWoKYmxCR0dEcVJmd2dzMzRyZEw5TXBkb0hhVXVZZzlod1M1K3l3akxzRW01K0RJcTFBSmlYWi9wK0crK1Y2all2TQpTTEt3a1pIWUdvM041U3BES0NzV1Q0RC9tUm5IemZHM3hEQ2kvOFhFNDJ0cGROTVJNczB5cVZqM25YME9GTGlPClRHQitrbGtMdlE1cHdWSnRoYXlwUE1jNzUrR2s0aDJjZ2JFQmpXc1ZBb0dBSnl4Z2IwcXpZdXdtN3p0VE9QQTAKZmhGNkhDczF3RGpwbEhKMlZkZXFTa0tjODBJR0J5SUliN01lOWdDaEl2dzJIOUQ0UmJVcnh0Nm0vZVZLNVVTMgpYQVFoSFBQdjhKZmsrMk1KRjJVSWs4eXF2TDJTNEdvY0pOVTA1cnJCRk9CMnVuZEdQT0Rhck5KNnRBN1FMd0twCkdpY3pGTmQwQ1I5dEVFZ2hTTFpINUNFQ2dZQUgvSUVBU2pZVnpodUVUWGc0LzJZaVhiQmdSZnAvUFRkSXp0SjYKcmpwRDRtSERRbWZOSEhaZGNKb1J3ajl0R2Rqd1YrOVlPc3puUDkySEx6aDI4akpUdUlGTEZKandEbk5CcjBMQQpQdzUyc0srOE1GQjgrbVZrMjFrQ1FGS3Z6Q094SUpDRUMySE9ZRTNvaU44YU9YSzZ3N0crWStzTktEdzN1UjZyCm9zdStJUUtCZ0g0QXZUeEM3RkdWWHlRMTI1dWRVV2QyVWxvY3lwTk1JNGxEVXF1UWFOaDNsWmY4VXBrOFhQRG4KM0tYOGZZL3pSUlc1R2xmN3dtekhIa3Rab3FHWEdSaHcrOGZqRjYweHU1ZDdyb3JFNmhDV3Z1a3ZWWGYxTm02awowT2ExT1g0azN1UXRpc3RXZlFYc1JMT2MyMEtndmpCNnZBSUp2N2J2b2owaWVrZHdlME1NCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
- name: minikube
  user:
    client-certificate: /Users/shubhamdixit/.minikube/profiles/minikube/client.crt
    client-key: /Users/shubhamdixit/.minikube/profiles/minikube/client.key
- name: arn:aws:eks:us-east-2:194039150345:cluster/cluster-eksCluster-cf67990
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - us-east-2
      - eks
      - get-token
      - --cluster-name
      - cluster-eksCluster-cf67990
      command: aws
